# openstack keypair create --public-key ~/.ssh/id_rsa.pub osh-vm-key
# openstack orchestration template validate -t osh-cluster.yaml
# openstack stack create --wait  -t osh-cluster.yaml osh-cluster
heat_template_version: 2016-10-14

parameters:
  public_net:
    type: string
    default: public
  image:
    type: string
    default: ubuntu-16.04
  ssh_key:
    type: string
    default: osh-vm-key
  private_net_cidr:
    type: string
    default: 10.11.11.0/24
  storage_net_cidr:
    type: string
    default: 10.11.12.0/24

resources:
  flavor:
    type: OS::Nova::Flavor
    properties:
      disk: 32
      ram: 16384
      vcpus: 4

  deploy_key:
    type: OS::Nova::KeyPair
    properties:
      name: deploy_key
      save_private_key: true

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: {get_param: public_net}

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: private_subnet }

  private_net:
    type: OS::Neutron::Net

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network: { get_resource: private_net }
      cidr: {get_param: private_net_cidr }
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4

  storage_net:
    type: OS::Neutron::Net

  storage_subnet:
    type: OS::Neutron::Subnet
    properties:
      gateway_ip: null
      network: { get_resource: storage_net }
      cidr: {get_param: storage_net_cidr }

  node_one_private_net_port:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: private_net}
      fixed_ips:
        - subnet: { get_resource: private_subnet }
      port_security_enabled: false

  node_two_private_net_port:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: private_net}
      fixed_ips:
        - subnet: { get_resource: private_subnet }
      port_security_enabled: false

  node_three_private_net_port:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: private_net}
      fixed_ips:
        - subnet: { get_resource: private_subnet }
      port_security_enabled: false

  node_one_storage_net_port:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: storage_net}
      fixed_ips:
        - subnet: { get_resource: storage_subnet }
      port_security_enabled: false

  node_two_storage_net_port:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: storage_net}
      fixed_ips:
        - subnet: { get_resource: storage_subnet }
      port_security_enabled: false

  node_three_storage_net_port:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: storage_net}
      fixed_ips:
        - subnet: { get_resource: storage_subnet }
      port_security_enabled: false

  node_one:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      flavor: { get_resource: flavor}
      key_name: {get_param: ssh_key}
      networks:
        - port: { get_resource: node_one_private_net_port }
        - port: { get_resource: node_one_storage_net_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            echo "$node_admin_ip $(hostname -s)" >> /etc/hosts
            sudo -H su -c 'echo "$deploy_public_key" >> ~/.ssh/authorized_keys' ubuntu

            mkdir -p /etc/openstack-helm
            cat > /etc/openstack-helm/deploy-key.pem << EOF
            $deploy_private_key
            EOF
            chmod 0600 /etc/openstack-helm/deploy-key.pem

            cat > /usr/local/bin/ssh-two <<EOF
            ssh -i /etc/openstack-helm/deploy-key.pem $node_two_ip $@
            EOF
            chmod +x /usr/local/bin/ssh-two
            cat > /usr/local/bin/ssh-three <<EOF
            ssh -i /etc/openstack-helm/deploy-key.pem $node_three_ip
            EOF
            chmod +x /usr/local/bin/ssh-three

            cat > /etc/openstack-helm/nodes << EOF
            $node_one_ip
            $node_two_ip
            $node_three_ip
            EOF

            cat > /etc/openstack-helm/storage-subnet << EOF
            $storage_subnet
            EOF

            chown -R ubuntu: /etc/openstack-helm

            apt-get update
            apt-get install --no-install-recommends -y \
                    ca-certificates \
                    git \
                    make \
                    jq \
                    nmap \
                    curl

            git clone https://git.openstack.org/openstack/openstack-helm-infra /opt/openstack-helm-infra

            cat > /opt/openstack-helm-infra/tools/gate/devel/multinode-inventory.yaml <<EOF
            all:
              children:
                primary:
                  hosts:
                    node_one:
                      ansible_port: 22
                      ansible_host: $node_one_ip
                      ansible_user: ubuntu
                      ansible_ssh_private_key_file: /etc/openstack-helm/deploy-key.pem
                      ansible_ssh_extra_args: -o StrictHostKeyChecking=no
                nodes:
                  hosts:
                    node_two:
                      ansible_port: 22
                      ansible_host: $node_two_ip
                      ansible_user: ubuntu
                      ansible_ssh_private_key_file: /etc/openstack-helm/deploy-key.pem
                      ansible_ssh_extra_args: -o StrictHostKeyChecking=no
                    node_three:
                      ansible_port: 22
                      ansible_host: $node_three_ip
                      ansible_user: ubuntu
                      ansible_ssh_private_key_file: /etc/openstack-helm/deploy-key.pem
                      ansible_ssh_extra_args: -o StrictHostKeyChecking=no
            EOF

            function net_default_iface {
             sudo ip -4 route list 0/0 | awk '{ print $5; exit }'
            }
            cat > /opt/openstack-helm-infra/tools/gate/devel/multinode-vars.yaml <<EOF
            kubernetes_network_default_device: $(net_default_iface)
            EOF

            chown -R ubuntu: /opt

            #sudo -H su -c 'cd /opt/openstack-helm-infra; make dev-deploy setup-host multinode' ubuntu
            #sudo -H su -c 'cd /opt/openstack-helm-infra; make dev-deploy k8s multinode' ubuntu

            #sudo -H su -c 'git clone https://git.openstack.org/openstack/openstack-helm /opt/openstack-helm' ubuntu
            #sudo -H su -c 'cd /opt/openstack-helm-infra; make all' ubuntu

          params:
            $node_admin_ip: {get_attr: [node_one_private_net_port, fixed_ips, 0, ip_address]}
            $deploy_public_key: {get_attr: [deploy_key, public_key]}
            $deploy_private_key: {get_attr: [deploy_key, private_key]}
            $node_one_ip: {get_attr: [node_one_private_net_port, fixed_ips, 0, ip_address]}
            $node_two_ip: {get_attr: [node_two_private_net_port, fixed_ips, 0, ip_address]}
            $node_three_ip: {get_attr: [node_three_private_net_port, fixed_ips, 0, ip_address]}
            $storage_subnet: {get_param: storage_net_cidr }

  node_two:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      flavor: { get_resource: flavor}
      key_name: {get_param: ssh_key}
      networks:
        - port: { get_resource: node_two_private_net_port }
        - port: { get_resource: node_two_storage_net_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            echo "$node_admin_ip $(hostname -s)" >> /etc/hosts
            sudo -H su -c 'echo "$deploy_public_key" >> ~/.ssh/authorized_keys' ubuntu

            apt-get update
            apt-get install --no-install-recommends -y \
                    git

            sudo -H chown -R ubuntu: /opt
            sudo -H su -c 'git clone https://git.openstack.org/openstack/openstack-helm-infra /opt/openstack-helm-infra' ubuntu
          params:
            $node_admin_ip: {get_attr: [node_two_private_net_port, fixed_ips, 0, ip_address]}
            $deploy_public_key: {get_attr: [deploy_key, public_key]}

  node_three:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      flavor: { get_resource: flavor}
      key_name: {get_param: ssh_key}
      networks:
        - port: { get_resource: node_three_private_net_port }
        - port: { get_resource: node_three_storage_net_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            echo "$node_admin_ip $(hostname -s)" >> /etc/hosts
            sudo -H su -c 'echo "$deploy_public_key" >> ~/.ssh/authorized_keys' ubuntu

            apt-get update
            apt-get install --no-install-recommends -y \
                    git

            sudo -H chown -R ubuntu: /opt
            sudo -H su -c 'git clone https://git.openstack.org/openstack/openstack-helm-infra /opt/openstack-helm-infra' ubuntu
          params:
            $node_admin_ip: {get_attr: [node_three_private_net_port, fixed_ips, 0, ip_address]}
            $deploy_public_key: {get_attr: [deploy_key, public_key]}

  server_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: {get_param: public_net}
      port_id: { get_resource: node_one_private_net_port }
